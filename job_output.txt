Started by user jenkins
 > git rev-parse --is-inside-work-tree # timeout=10
Fetching changes from the remote Git repository
 > git config remote.origin.url https://github.com/flyer8/pipe-for-kube.git # timeout=10
Fetching upstream changes from https://github.com/flyer8/pipe-for-kube.git
 > git --version # timeout=10
 > git fetch --tags --progress https://github.com/flyer8/pipe-for-kube.git +refs/heads/*:refs/remotes/origin/*
 > git rev-parse refs/remotes/origin/master^{commit} # timeout=10
 > git rev-parse refs/remotes/origin/origin/master^{commit} # timeout=10
Checking out Revision cf2c7ff535ee29d46e6cdbb86f2eaaa1c8e619d0 (refs/remotes/origin/master)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f cf2c7ff535ee29d46e6cdbb86f2eaaa1c8e619d0
 > git rev-list fb4ea16869ffde0e7e6c02071d7368516cbec82e # timeout=10
[Pipeline] node
Running on jnlp-b64baef67981 in /root/workspace/pipe-for-kube
[Pipeline] {
[Pipeline] withEnv
[Pipeline] {
[Pipeline] withDockerRegistry
Wrote authentication to /root/.dockercfg
[Pipeline] {
[Pipeline] stage (Checkout and build image)
Using the ‘stage’ step without a block argument is deprecated
Entering stage Checkout and build image
Proceeding
[Pipeline] git
Cloning the remote Git repository
Cloning repository https://github.com/flyer8/pipe-for-kube.git
 > git init /root/workspace/pipe-for-kube # timeout=10
Fetching upstream changes from https://github.com/flyer8/pipe-for-kube.git
 > git --version # timeout=10
 > git fetch --tags --progress https://github.com/flyer8/pipe-for-kube.git +refs/heads/*:refs/remotes/origin/*
 > git config remote.origin.url https://github.com/flyer8/pipe-for-kube.git # timeout=10
 > git config --add remote.origin.fetch +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git config remote.origin.url https://github.com/flyer8/pipe-for-kube.git # timeout=10
Fetching upstream changes from https://github.com/flyer8/pipe-for-kube.git
 > git fetch --tags --progress https://github.com/flyer8/pipe-for-kube.git +refs/heads/*:refs/remotes/origin/*
 > git rev-parse refs/remotes/origin/master^{commit} # timeout=10
 > git rev-parse refs/remotes/origin/origin/master^{commit} # timeout=10
Checking out Revision cf2c7ff535ee29d46e6cdbb86f2eaaa1c8e619d0 (refs/remotes/origin/master)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f cf2c7ff535ee29d46e6cdbb86f2eaaa1c8e619d0
 > git branch -a -v --no-abbrev # timeout=10
 > git checkout -b master cf2c7ff535ee29d46e6cdbb86f2eaaa1c8e619d0
[Pipeline] sh
[pipe-for-kube] Running shell script
+ docker build -t flyer8/nginx-lua .
Sending build context to Docker daemon 188.9 kB

Step 1/13 : FROM alpine:3.4
 ---> 1a19a71e5d38
Step 2/13 : MAINTAINER flyer8 "flyer8@yandex.ru"
 ---> Using cache
 ---> 1dafac37d454
Step 3/13 : ENV NGINX_VERSION 1.11.3
 ---> Using cache
 ---> 4bbb78c21826
Step 4/13 : ENV DEVEL_KIT_MODULE_VERSION 0.3.0
 ---> Using cache
 ---> 15892e1bbb33
Step 5/13 : ENV LUA_MODULE_VERSION 0.10.6
 ---> Using cache
 ---> d04a1ab58e65
Step 6/13 : ENV LUAJIT_LIB /usr/lib
 ---> Using cache
 ---> 08909073670a
Step 7/13 : ENV LUAJIT_INC /usr/include/luajit-2.0
 ---> Using cache
 ---> 8558cef94a18
Step 8/13 : RUN GPG_KEYS=B0F4253373F8F6F510D42178520A9993A1C052F8 	&& CONFIG="		--prefix=/etc/nginx 		--sbin-path=/usr/sbin/nginx 		--modules-path=/usr/lib/nginx/modules 		--conf-path=/etc/nginx/nginx.conf 		--error-log-path=/var/log/nginx/error.log 		--http-log-path=/var/log/nginx/access.log 		--pid-path=/var/run/nginx.pid 		--lock-path=/var/run/nginx.lock 		--http-client-body-temp-path=/var/cache/nginx/client_temp 		--http-proxy-temp-path=/var/cache/nginx/proxy_temp 		--http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp 		--http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp 		--http-scgi-temp-path=/var/cache/nginx/scgi_temp 		--user=nginx 		--group=nginx 		--with-http_ssl_module 		--with-http_realip_module 		--with-http_addition_module 		--with-http_sub_module 		--with-http_dav_module 		--with-http_flv_module 		--with-http_mp4_module 		--with-http_gunzip_module 		--with-http_gzip_static_module 		--with-http_random_index_module 		--with-http_secure_link_module 		--with-http_stub_status_module 		--with-http_auth_request_module 		--with-http_xslt_module=dynamic 		--with-http_image_filter_module=dynamic 		--with-http_geoip_module 		--with-http_perl_module=dynamic 		--with-threads 		--with-stream 		--with-stream_ssl_module 		--with-stream_geoip_module=dynamic 		--with-http_slice_module 		--with-mail 		--with-mail_ssl_module 		--with-file-aio 		--with-http_v2_module 		--with-ipv6 		--add-module=/usr/src/ngx_devel_kit-$DEVEL_KIT_MODULE_VERSION 		--add-module=/usr/src/lua-nginx-module-$LUA_MODULE_VERSION 	" 	&& addgroup -S nginx 	&& adduser -D -S -h /var/cache/nginx -s /sbin/nologin -G nginx nginx 	&& apk add --no-cache --virtual .build-deps 		gcc 		libc-dev 		make 		openssl-dev 		pcre-dev 		zlib-dev 		linux-headers 		curl 		gnupg 		libxslt-dev 		gd-dev 		geoip-dev 		perl-dev 		luajit-dev 	&& curl -fSL http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz -o nginx.tar.gz 	&& curl -fSL http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz.asc  -o nginx.tar.gz.asc 	&& curl -fSL https://github.com/simpl/ngx_devel_kit/archive/v$DEVEL_KIT_MODULE_VERSION.tar.gz -o ndk.tar.gz 	&& curl -fSL https://github.com/openresty/lua-nginx-module/archive/v$LUA_MODULE_VERSION.tar.gz -o lua.tar.gz 	&& export GNUPGHOME="$(mktemp -d)" 	&& gpg --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys "$GPG_KEYS" 	&& gpg --batch --verify nginx.tar.gz.asc nginx.tar.gz 	&& rm -r "$GNUPGHOME" nginx.tar.gz.asc 	&& mkdir -p /usr/src 	&& tar -zxC /usr/src -f nginx.tar.gz 	&& tar -zxC /usr/src -f ndk.tar.gz 	&& tar -zxC /usr/src -f lua.tar.gz 	&& rm nginx.tar.gz ndk.tar.gz lua.tar.gz 	&& cd /usr/src/nginx-$NGINX_VERSION 	&& ./configure $CONFIG --with-debug 	&& make -j$(getconf _NPROCESSORS_ONLN) 	&& mv objs/nginx objs/nginx-debug 	&& mv objs/ngx_http_xslt_filter_module.so objs/ngx_http_xslt_filter_module-debug.so 	&& mv objs/ngx_http_image_filter_module.so objs/ngx_http_image_filter_module-debug.so 	&& mv objs/ngx_http_perl_module.so objs/ngx_http_perl_module-debug.so 	&& mv objs/ngx_stream_geoip_module.so objs/ngx_stream_geoip_module-debug.so 	&& ./configure $CONFIG 	&& make -j$(getconf _NPROCESSORS_ONLN) 	&& make install 	&& rm -rf /etc/nginx/html/ 	&& mkdir /etc/nginx/conf.d/ 	&& mkdir -p /usr/share/nginx/html/ 	&& install -m644 html/index.html /usr/share/nginx/html/ 	&& install -m644 html/50x.html /usr/share/nginx/html/ 	&& install -m755 objs/nginx-debug /usr/sbin/nginx-debug 	&& install -m755 objs/ngx_http_xslt_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_xslt_filter_module-debug.so 	&& install -m755 objs/ngx_http_image_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_image_filter_module-debug.so 	&& install -m755 objs/ngx_http_perl_module-debug.so /usr/lib/nginx/modules/ngx_http_perl_module-debug.so 	&& install -m755 objs/ngx_stream_geoip_module-debug.so /usr/lib/nginx/modules/ngx_stream_geoip_module-debug.so 	&& ln -s ../../usr/lib/nginx/modules /etc/nginx/modules 	&& strip /usr/sbin/nginx* 	&& strip /usr/lib/nginx/modules/*.so 	&& rm -rf /usr/src/nginx-$NGINX_VERSION 		&& apk add --no-cache --virtual .gettext gettext 	&& mv /usr/bin/envsubst /tmp/ 		&& runDeps="$( 		scanelf --needed --nobanner /usr/sbin/nginx /usr/lib/nginx/modules/*.so /tmp/envsubst 			| awk '{ gsub(/,/, "\nso:", $2); print "so:" $2 }' 			| sort -u 			| xargs -r apk info --installed 			| sort -u 	)" 	&& apk add --no-cache --virtual .nginx-rundeps $runDeps 	&& apk del .build-deps 	&& apk del .gettext 	&& mv /tmp/envsubst /usr/local/bin/ 		&& ln -sf /dev/stdout /var/log/nginx/access.log 	&& ln -sf /dev/stderr /var/log/nginx/error.log
 ---> Using cache
 ---> 1119e24d724a
Step 9/13 : COPY nginx.conf /etc/nginx/nginx.conf
 ---> Using cache
 ---> ffdda56f8c9e
Step 10/13 : COPY nginx.vh.default.conf /etc/nginx/conf.d/default.conf
 ---> Using cache
 ---> fb0fdac20cdb
Step 11/13 : COPY index.html /usr/share/nginx/html/index.html
 ---> Using cache
 ---> 2616b4a4c2cf
Step 12/13 : EXPOSE 80 443
 ---> Using cache
 ---> 1c1f3555e770
Step 13/13 : CMD nginx -g daemon off;
 ---> Using cache
 ---> 47fde37c4ef5
Successfully built 47fde37c4ef5
[Pipeline] dockerFingerprintFrom
[Pipeline] stage (Push image to Docker Hub registry)
Using the ‘stage’ step without a block argument is deprecated
Entering stage Push image to Docker Hub registry
Proceeding
[Pipeline] sh
[pipe-for-kube] Running shell script
+ docker tag --force=true flyer8/nginx-lua index.docker.io/flyer8/nginx-lua:latest
unknown flag: --force
See 'docker tag --help'.
+ docker tag flyer8/nginx-lua index.docker.io/flyer8/nginx-lua:latest
[Pipeline] sh
[pipe-for-kube] Running shell script
+ docker push index.docker.io/flyer8/nginx-lua:latest
The push refers to a repository [docker.io/flyer8/nginx-lua]
713001837e56: Preparing
4f9c2908d586: Preparing
2464a3fd1dcc: Preparing
d08dc017624f: Preparing
2b0fb280b60d: Preparing
2b0fb280b60d: Mounted from library/alpine
713001837e56: Pushed
2464a3fd1dcc: Pushed
4f9c2908d586: Pushed
d08dc017624f: Pushed
latest: digest: sha256:63b1a4e0dbc61e2cdefac4a632f93fed0f8ddf93f9a47baced5100a176da197f size: 1361
[Pipeline] stage (Deploying the chart in Kubernetes)
Using the ‘stage’ step without a block argument is deprecated
Entering stage Deploying the chart in Kubernetes
Proceeding
[Pipeline] sh
[pipe-for-kube] Running shell script
+ helm delete --purge flyer8
Error: release: "flyer8" not found
+ true
[Pipeline] sh
[pipe-for-kube] Running shell script
+ helm install --name flyer8 charts/nginx-lua/
NAME:   flyer8
LAST DEPLOYED: Sat Sep 23 18:04:27 2017
NAMESPACE: jenkins
STATUS: DEPLOYED

RESOURCES:
==> v1beta1/Deployment
NAME               DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE
flyer8-nginx-lua   1         1         1            0           0s

==> v1/Service
NAME               CLUSTER-IP      EXTERNAL-IP   PORT(S)        AGE
flyer8-nginx-lua   10.35.247.126   <pending>     80:30584/TCP   0s


NOTES:
1. Get the application URL by running these commands:
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get svc -w flyer8-nginx-lua'
  export SERVICE_IP=$(kubectl get svc --namespace jenkins flyer8-nginx-lua -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
  echo http://$SERVICE_IP:80

[Pipeline] }
[Pipeline] // withDockerRegistry
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // node
[Pipeline] End of Pipeline
Finished: SUCCESS

